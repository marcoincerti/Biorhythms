import 'package:biorhythms/addUser.dart';import 'package:flutter/cupertino.dart';import 'package:flutter/material.dart';import 'package:google_mobile_ads/google_mobile_ads.dart';import 'package:intl/intl.dart';import 'package:progress_button/progress_button.dart';import 'package:shared_preferences/shared_preferences.dart';import 'package:flutter_slidable/flutter_slidable.dart';import 'Home.dart';import 'Classi/SharedPref.dart';import 'Classi/User.dart';Future<void> main() async {  WidgetsFlutterBinding.ensureInitialized();  MobileAds.instance.initialize();  runApp(MyApp());}class MyApp extends StatelessWidget {  // This widget is the root of your application.  @override  Widget build(BuildContext context) {    return MaterialApp(      home: Authenticate(),    );  }}class Authenticate extends StatelessWidget {  @override  Widget build(BuildContext context) {    final SharedPref sharedPref = SharedPref();    return FutureBuilder<dynamic>(        future: sharedPref.read("selezionato"),        builder: (BuildContext context, AsyncSnapshot<dynamic> snapshot) {          if (snapshot.hasData) {            User user = User.fromJson(snapshot.data);            return Home(user: user);          }          return MyHomePage();        });  }}class MyHomePage extends StatefulWidget {  MyHomePage({Key key}) : super(key: key);  @override  _MyHomePageState createState() => _MyHomePageState();}class _MyHomePageState extends State<MyHomePage> {  Set shared;  SharedPref sharedPref = SharedPref();  void initState() {    super.initState();  }  @override  Widget build(BuildContext context) {    return Scaffold(      backgroundColor: Color.fromRGBO(254, 219, 183, 1.0),      body: Center(        child: SingleChildScrollView(          child: Column(            crossAxisAlignment: CrossAxisAlignment.center,            mainAxisAlignment: MainAxisAlignment.center,            children: <Widget>[              Padding(                padding: const EdgeInsets.only(top: 30.0, bottom: 30.0),                child: Center(                  child: Container(                    decoration: BoxDecoration(                      borderRadius: BorderRadius.circular(50.0),                      boxShadow: [                        BoxShadow(                          color: Colors.grey.withOpacity(0.5),                          spreadRadius: 8,                          blurRadius: 7,                          offset: Offset(0, 3), // changes position of shadow                        ),                      ],                    ),                    width: 200,                    height: 200,                    child: ClipRRect(                        borderRadius: BorderRadius.circular(30.0), child: Image.asset('assets/icona_bioRitmi.png')),                  ),                ),              ),              Container(                margin: const EdgeInsets.only(top: 10, left: 15, right: 15),                decoration: BoxDecoration(                  color: Color.fromRGBO(182, 154, 129, 0.33725490196078434),                  borderRadius: BorderRadius.all(Radius.circular(30)),                ),                child: FutureBuilder<int>(                  future: _read(), // async work                  builder: (BuildContext context, AsyncSnapshot<int> snapshot) {                    switch (snapshot.connectionState) {                      case ConnectionState.waiting:                        return new CircularProgressIndicator();                      default:                        if (snapshot.hasError)                          return Text('Error: ${snapshot.error}');                        else if (snapshot.data == 0) {                          return Container(                            padding: const EdgeInsets.all(25),                            child: Text(                              "Welcome, start adding a user. All information will be saved locally. \n\nThe biorhythm theory is the pseudoscientific idea that our daily lives are significantly affected by rhythmic cycles with periods of exactly 23, 28 and 33 days,typically a 23-day physical cycle, a 28-day emotional cycle, and a 33-day intellectual cycle. The idea was developed by Wilhelm Fliess in the late 19th century, and was popularized in the United States in late 1970s. The proposal has been independently tested.",                            ),                          );                        } else {                          return ListView.builder(                              itemBuilder: (context, index) => _makeList(context, index, shared.toList()[index]),                              itemCount: shared.length,                              physics: const NeverScrollableScrollPhysics(),                              shrinkWrap: true);                        }                    }                  },                ),              ),              Container(                width: 180,                margin: const EdgeInsets.only(top: 20),                child: ProgressButton(                  child: Row(                    mainAxisAlignment: MainAxisAlignment.center,                    children: [                      Icon(                        Icons.add_box_rounded,                        color: Colors.green,                        size: 24.0,                      ),                      SizedBox(                        width: 5,                      ),                      Text(                        'Add User',                        style: TextStyle(                          color: Colors.white,                        ),                      ),                    ],                  ),                  onPressed: () {                    Navigator.push(                      context,                      MaterialPageRoute(builder: (context) => AddUser()),                    );                  },                  buttonState: ButtonState.normal,                  backgroundColor: Color.fromRGBO(182, 154, 129, 0.33725490196078434),                  progressColor: Theme.of(context).primaryColor,                ),              ),            ],          ),        ),      ),    );  }  @override  void dispose() {    super.dispose();  }  Future<int> _read() async {    final prefs = await SharedPreferences.getInstance();    shared = prefs.getKeys();    int lastValore;    shared.isEmpty ? lastValore = 0 : lastValore = shared.length;    return lastValore;  }  loadSharedPrefs(String key) async {    User user = User.fromJson(await sharedPref.read(key));    return user;  }  _deletItem(String key) {    setState(() {      shared.remove(key);      sharedPref.remove(key);    });  }  Container _makeList(BuildContext context, int index, String key) {    return Container(      child: FutureBuilder<dynamic>(        future: loadSharedPrefs(key), // async work        builder: (BuildContext context, AsyncSnapshot<dynamic> snapshot) {          switch (snapshot.connectionState) {            case ConnectionState.waiting:              return new CircularProgressIndicator();            default:              if (snapshot.hasError)                return Text('Error: ${snapshot.error}');              else {                User user = snapshot.data;                var myFormat = DateFormat('d/MM/yyyy');                return Column(                  children: [                    Slidable(                      actionPane: SlidableDrawerActionPane(),                      secondaryActions: <Widget>[                        IconSlideAction(                          caption: 'Delete',                          color: Colors.red,                          icon: Icons.delete,                          onTap: () => _deletItem(key),                        ),                      ],                      child: ListTile(                        onTap: () {                          sharedPref.save("selezionato", user);                          Navigator.pushReplacement(                              context,                              MaterialPageRoute(                                  builder: (context) => Home(                                        user: user,                                      )));                        },                        title: Text(user.name, style: TextStyle(fontWeight: FontWeight.bold, fontSize: 20)),                        subtitle: Text(                            '${myFormat.format(user.date)} - ${user.calculateAge().toString()} years - ${user.segnoZod}'),                      ),                    ),                    SizedBox(                      height: 5,                    ),                  ],                );              }          }        },      ),    );  }}